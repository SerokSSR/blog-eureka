<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eureka Demo</title>
    <link>https://www.atsnow.tk/</link>
    <description>Recent content on Eureka Demo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#34;https://www.wangchucheng.com/&#34;&gt;C. Wang&lt;/a&gt; and &lt;a href=&#34;https://www.ruiqima.com/&#34;&gt;R. Ma&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 16 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.atsnow.tk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chapter 1</title>
      <link>https://www.atsnow.tk/docs/example-doc/chapter-1/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/docs/example-doc/chapter-1/</guid>
      <description>&lt;p&gt;This is chapter 1 of example doc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chapter 1</title>
      <link>https://www.atsnow.tk/docs/example-doc/nested-chapter/chapter-1/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/docs/example-doc/nested-chapter/chapter-1/</guid>
      <description>&lt;p&gt;This is chapter 1 of nested chapter.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chapter 2</title>
      <link>https://www.atsnow.tk/docs/example-doc/chapter-2/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/docs/example-doc/chapter-2/</guid>
      <description>&lt;p&gt;This is chapter 2 of example doc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chapter 2</title>
      <link>https://www.atsnow.tk/docs/example-doc/nested-chapter/chapter-2/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/docs/example-doc/nested-chapter/chapter-2/</guid>
      <description>&lt;p&gt;This is chapter 2 of nested chapter.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hexo：将你的博客部署到 Vercel</title>
      <link>https://www.atsnow.tk/hexo-vercel/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/hexo-vercel/</guid>
      <description>写在前面 近些日子，静态网站的热度又渐渐高了起来。相比于动态网站，静态网站具有轻量、无需服务器、利于SEO、速度快等特点，非常适合个人博客。再加上Hex</description>
    </item>
    
    <item>
      <title>尺取法</title>
      <link>https://www.atsnow.tk/ruler-method/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/ruler-method/</guid>
      <description>尺取法 与单调队列相关 要求在满足条件的情况下，长度越长，答案越好（下简称具有单调性）. 利用双指针 $l,r$ 及队列思想，对于同一个 $l$ 让 $r$ 尽可能延伸至最远，得到一个</description>
    </item>
    
    <item>
      <title>About CODESTYLE</title>
      <link>https://www.atsnow.tk/about-codestyle/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/about-codestyle/</guid>
      <description>commit 命名规范 feat: 一个新功能 fix: 一个 bug 修复 docs: 仅仅修改了文档，比如 README, CHANGELOG, CONTRIBUTE 等 style: 不影响代码逻辑的修改，比如空格、格式缩进、删除分号等 refactor: 代码重构 perf: 提升性能的改动 test: 增加</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://www.atsnow.tk/markdown-syntax-guide/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/markdown-syntax-guide/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Butterfly：添加全局吸底 Aplayer 播放器</title>
      <link>https://www.atsnow.tk/butterfly-aplayer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/butterfly-aplayer/</guid>
      <description>以下步骤在 Butterfly主题上可以正常生效。如果你使用的是其他主题，可以根据情况自行适配。 配置播放器 解决与 hexo-tag-aplayer 的兼容问题 如果你没有安装过 hexo-tag-aplayer 插件，请直</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL：SET &amp; MULTISET</title>
      <link>https://www.atsnow.tk/stl-set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/stl-set/</guid>
      <description>C++ STL：SET &amp;amp; MULTISET 定义 方式 效果 set &amp;lt;数据类型名&amp;gt; 集合名; 先定义一个容器，容器内无任何元素 set &amp;lt;数据类型名&amp;gt; 集合名(另一个集合名)</description>
    </item>
    
    <item>
      <title>CF387D</title>
      <link>https://www.atsnow.tk/cf387d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/cf387d/</guid>
      <description>CF387D 题意分析 操作最少的次数，构成有趣图，注意无重边，有向边。 操作分为加边和删边。 有趣图定义 有一个中心，满足此点有自环，且与其他结点有双向边。 除中心点外的</description>
    </item>
    
    <item>
      <title>D2T1：贪心、二分、并查集</title>
      <link>https://www.atsnow.tk/noip-d2t1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/noip-d2t1/</guid>
      <description>常见的贪心技巧 货币使用问题： 尽可能少用，那么我们就先拿面值最大的，依次往下走，最后拿光了即可。 区间调度问题： 工作时间不能重叠，在可选工作中，每次都选取</description>
    </item>
    
    <item>
      <title>DYG：他们的时代</title>
      <link>https://www.atsnow.tk/kpl2020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/kpl2020/</guid>
      <description>转载自知乎 @无言。 1 萧玦坐在采访席上，嘴角带着一丝笑意。 冬天好像快结束了。 18年的次级联赛，是属于他们的时代。 在与宿敌SG鏖战中，他拿出自己的绝活元歌</description>
    </item>
    
    <item>
      <title>Hexo：为你的博客配置 PWA</title>
      <link>https://www.atsnow.tk/hexo-gulp-pwa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/hexo-gulp-pwa/</guid>
      <description>Hexo：使用 Gulp 为你的博客配置 PWA 使用这个方法之前，请先卸载掉其它的 PWA 插件，并安装 Gulp 和 WorkBox。 npm install gulp-cli -g npm install workbox-build gulp --save-dev 本文参考利用 Workbox 实现博客的 PWA和</description>
    </item>
    
    <item>
      <title>Hexo：配置 SSH 公钥部署</title>
      <link>https://www.atsnow.tk/hexo-ssh-deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/hexo-ssh-deploy/</guid>
      <description>Hexo：配置 SSH 公钥部署 配置 git 使用 ssh 密钥 git 支持 https 和 git 两种传输协议。其实两种方式都可以，但是如果使用https协议，每次pull、push都要输入密码（</description>
    </item>
    
    <item>
      <title>NOIP2020 游记</title>
      <link>https://www.atsnow.tk/noip2020-you-ji/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/noip2020-you-ji/</guid>
      <description>高二 OIer @SerokSSR，坐标 TJ。 退役了。 Once upon a time 大概是 NOI Online 刚开始的时候吧，就想着该为 1= 做准备了。三场全都参加了，第一次忘写头文件，第二次抽屉原理不</description>
    </item>
    
    <item>
      <title>Terminal · 番外</title>
      <link>https://www.atsnow.tk/terminal-extra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/terminal-extra/</guid>
      <description>Terminal · 番外 他站在一片未知的天空里；他听到人的呐喊。 他看见了一群人，如同星星点点的火光，向着远处的一扇门去。 他看见了她。 他感受着她的面颊：寒气如冰锥一般刺</description>
    </item>
    
    <item>
      <title>凝眉（第一稿）</title>
      <link>https://www.atsnow.tk/ning-mei/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/ning-mei/</guid>
      <description>p{text-indent: 32px;} 凝眉 他和她走下车。站台上熙熙攘攘的人守望在那里。没有人向他们看上一眼。 他们停下脚步，看着列车消失在金色的反光里，只留下无底的空白。 “所以……新见和</description>
    </item>
    
    <item>
      <title>匹配：模板</title>
      <link>https://www.atsnow.tk/match-template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/match-template/</guid>
      <description>匹配：模板 UOJ78 二分图最大匹配（DFS - KM） #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;iostream&amp;gt; using namespace std; const int N = 550; int match[N], g[N][N], vis[N], link[N]; int n, m, e, tag, ans = 0; bool dfs(int u) { for(int v=1; v&amp;lt;=m; ++v) { if(!g[u][v] or vis[v] == tag) continue; vis[v] = tag; if(!match[v] or dfs(match[v])) { match[v] = u; return true;</description>
    </item>
    
    <item>
      <title>单调队列</title>
      <link>https://www.atsnow.tk/monotonous-queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/monotonous-queue/</guid>
      <description>单调队列 具有单调性的队列。当一新值准备入队时，须先从后向前，将对后来答案没有了影响的点弹出，再从前向后，将所有超出了统计范围的点弹出。对于大多数问题，</description>
    </item>
    
    <item>
      <title>图论</title>
      <link>https://www.atsnow.tk/graph-theory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/graph-theory/</guid>
      <description>图论 图论算法一般都是揉在一起的，很难单独把算法拆开讲，所以直接上题目吧。分类是大致分的，其实有很多是交叉的。 二叉树 二叉树的遍历有三种，分别为前序遍历，</description>
    </item>
    
    <item>
      <title>图论：LCA</title>
      <link>https://www.atsnow.tk/graph-lca/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/graph-lca/</guid>
      <description>LCA: Lowest common ancestor最近公共祖先 倍增求LCA 预处理向上跳2^k步的结果f[k][x] $O(n \log n)$ 求的时候先把两个点跳到一个深度，这里有一个特判，如果重合直</description>
    </item>
    
    <item>
      <title>图论：Tarjan</title>
      <link>https://www.atsnow.tk/graph-tarjan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/graph-tarjan/</guid>
      <description>前置概念 时间戳：搜索时第几个搜索到这个点。如搜索顺序是1-&amp;gt;2-&amp;gt;3-&amp;gt;6，则6的时间戳为4 对于无向图 连通分量：对于图G来的一个子图</description>
    </item>
    
    <item>
      <title>年轻人不讲武德</title>
      <link>https://www.atsnow.tk/mabaoguo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/mabaoguo/</guid>
      <description>缘起 健身房的年轻后生不讲武德偷袭马老师，把马保国老师的眼睛给蹭了一下 啊朋友们好啊，我是浑元形意太极门掌门人马保国。 刚才有个朋友，问我马老师发生甚么事了</description>
    </item>
    
    <item>
      <title>搜索与状压 DP</title>
      <link>https://www.atsnow.tk/dp-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/dp-graph/</guid>
      <description>DFS 众所周知，搜索和DP是不分家的，几乎所有的DP都可以转化为搜索。当想不出正解时，DFS也是骗分的好手段。 主要的搜索手段有： DFS/BFS爆搜 双向BF</description>
    </item>
    
    <item>
      <title>数论：不定方程整数解</title>
      <link>https://www.atsnow.tk/num-exgcd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/num-exgcd/</guid>
      <description>扩展欧几里得 求不定 $ax+by=c$ 的所有整数解。 判断该方程是否有解 裴蜀定理：设 $\gcd(a, b) = d$，则对任意整数x, y，有d|(ax + by) 成立； 特别地，一定存在x, y 满足ax +</description>
    </item>
    
    <item>
      <title>未来</title>
      <link>https://www.atsnow.tk/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/future/</guid>
      <description>p{text-indent: 32px;} 未来 :::default “When you have that last piece of the jigsaw, everything will, I hope, be clear. . . .&amp;quot; ::: 「引子」 我听着《我们仍不知道那年中美合拍的日子》，突然，章老师走了进来。我打开空气净化器，看了</description>
    </item>
    
    <item>
      <title>沼</title>
      <link>https://www.atsnow.tk/numa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/numa/</guid>
      <description>p{text-indent: 32px;} 沼 沼底的尽头，是一片覆压百万里的金色宫殿。大殿的外墙上，布满了交通错落的铭文，似是在昭示着什么。 一天，一个女孩闯入了这里。一阵和煦的金光顿时笼罩了</description>
    </item>
    
    <item>
      <title>浅谈 Splay（一）</title>
      <link>https://www.atsnow.tk/about-splay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/about-splay/</guid>
      <description>一、旋转（Zig - Zag） 1. 右旋（Right Rotation） 观察每个节点的变化，其中每个节点都有指向其父节点的指针没有画出。 ①②③处节点连接有变化。</description>
    </item>
    
    <item>
      <title>涉江</title>
      <link>https://www.atsnow.tk/she-jiang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/she-jiang/</guid>
      <description>涉江 E 座的尽头是一扇窗。她喜欢伏在那里的窗棂上，很多个课间。窗外是一幢天井；三面环楼，夐不见曦。 天井的中央是一台鱼池。一到每年新生入学的时候，鱼们便如</description>
    </item>
    
    <item>
      <title>简单动态规划：LIS、LCS、背包</title>
      <link>https://www.atsnow.tk/dp-linear/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/dp-linear/</guid>
      <description>P1020 导弹拦截 #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; using namespace std; const int N = 100010; int n = 0; int a[N], b[N], s[N], ls[N]; void add(int x, int v) { for(; x&amp;lt;=n; x+=x&amp;amp;(-x)) s[x] = max(s[x], v); } int query(int x) { int ans = 0; for(; x&amp;gt;0; x-=x&amp;amp;(-x)) ans = max(ans, s[x]); return ans; } int main() { //freopen(&amp;quot;p1020_1.in&amp;quot;, &amp;quot;r&amp;quot;, stdin); for(; scanf(&amp;quot;%d&amp;quot;, a+n+1) != EOF; ++n, b[n]</description>
    </item>
    
    <item>
      <title>简单数论</title>
      <link>https://www.atsnow.tk/num-theory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/num-theory/</guid>
      <description>简单数论 一点都不简单 欧几里得算法 又称辗转相除法 迭代求两数 gcd 的做法 由 $(a, b) = (a, ka + b)$ 的性质：$\gcd(a, b) = \gcd(b, a\bmod b)$ 容易证明这么做的复杂度是 $O(\log n)$ 注意：$</description>
    </item>
    
    <item>
      <title>网络流：Dijkstra 求费用流</title>
      <link>https://www.atsnow.tk/network-flow-dijkstra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/network-flow-dijkstra/</guid>
      <description>网络流：Dijkstra 求费用流 注：下文中的边权 $w$ 均表示费用 $f$。 Dijkstra 不能求有负权边的最短路，所以我们可以对网络 $G$ 中的每一个点设置一个势函数 $h(u)</description>
    </item>
    
    <item>
      <title>网络流：最大流</title>
      <link>https://www.atsnow.tk/maximum-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/maximum-flow/</guid>
      <description>网络流：最大流 EK 增广路方法是很多网络流算法的基础。其思路是每次找出一条从源到汇的能够增加流的路径，调整流值和残留网络 ，直到没有增广路为止。 EK 算法就是不</description>
    </item>
    
    <item>
      <title>网络流：最小割</title>
      <link>https://www.atsnow.tk/minimum-cut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/minimum-cut/</guid>
      <description>网络流：最小割 将图 $G$ 分为 $A$ 和 $B$ 两个点集，$A$ 和 $B$ 之间的边的集合称为无向图的割集。带权图的割 (Cut) 就是割集中的边权之和。 S - T 最小割 特别地，对于一个网络，</description>
    </item>
    
    <item>
      <title>网络流：模板</title>
      <link>https://www.atsnow.tk/network-flow-template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/network-flow-template/</guid>
      <description>网络流：模板 P3376 网络最大流（Dinic） #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;queue&amp;gt; using namespace std; const int N = 11000, M = 110000; const int INF = 0x7fffffff; struct node { int u, v, w, next; } e[M &amp;lt;&amp;lt; 1]; int cur[N], h[N], tot; int dfn[N], ans, n, m, s, t; void add(int u, int v, int w) { e[tot]</description>
    </item>
    
    <item>
      <title>网络流：消圈算法</title>
      <link>https://www.atsnow.tk/network-flow-deloop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/network-flow-deloop/</guid>
      <description>网络流：消圈算法 注：下文中的权均表示费用。 消圈定理 在某个流 $f$ 中，如果其残余网络中没有负圈（剩余流量为 $0$ 的边视为不存在），那它一定是当前流量下的最小费用</description>
    </item>
    
    <item>
      <title>还在用 STL 排序？</title>
      <link>https://www.atsnow.tk/still-using-stl-sort/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/still-using-stl-sort/</guid>
      <description>还在用 STL 排序？ 使用 C 库函数 很多人都不知道的是，其实 C 语言也是自带排序函数的，就是位于 &amp;lt;stdlib.h&amp;gt; 库中的 qsort 函数声明： void qsort(void *base, size_t nitems, size_t size, int (*compar)(const void *, const void*)) 其中 base - 指向要排序的</description>
    </item>
    
    <item>
      <title>陌上</title>
      <link>https://www.atsnow.tk/mo-shang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/mo-shang/</guid>
      <description>陌上 default 多少次咫尺之隔的希望 却终是目送着的离开 最美好的时候（） ？ 多少次经意又不经意 自然而又矫情 踌躇在触手可及的门口 隔的是无限的冰凌 缓慢而痛彻心扉 冷漠而撕</description>
    </item>
    
    <item>
      <title>雪（精选集）</title>
      <link>https://www.atsnow.tk/snow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/snow/</guid>
      <description>一 星, 梦, 昙 时空的网交错在一起，织成了天上的星。 二 未来 我的视线依然投在远方。看着看着，我渐渐不明白有多少东西可以称得上是变化了。世界本来就没有形状。 三</description>
    </item>
    
    <item>
      <title>高级动态规划：区间、树形</title>
      <link>https://www.atsnow.tk/dp-series/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.atsnow.tk/dp-series/</guid>
      <description>区间 DP P1880 [NOI1995]石子合并 #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;iostream&amp;gt; using namespace std; const int N = 220; int ans, dp[N][N], n, a[N], s[N]; int main() { scanf(&amp;quot;%d&amp;quot;, &amp;amp;n); for(int i=1; i&amp;lt;=n; ++i) { scanf(&amp;quot;%d&amp;quot;, a+i); s[i] = s[i-1] + a[i]; } for(int i=1; i&amp;lt;=n; ++i) { s[i+n] = s[i+n-1] + a[i]; } memset(dp, 0x3f, sizeof dp); for(int i=1; i&amp;lt;=2*n; ++i) dp[i][i]</description>
    </item>
    
  </channel>
</rss>
